---
import { graphql } from '~/lib/datocms/graphql';
import Layout from '../layouts/Layout.astro';
import { isDraftModeEnabled } from '~/lib/draftMode';
import { DraftModeQueryListener } from '~/components/DraftModeQueryListener';
import { TagFragment, responsiveImageFragment } from '~/lib/datocms/commonFragments';
import { ResponsiveImageFragment } from '~/components/ResponsiveImage/fragments';
import { executeQuery } from '~/lib/datocms/executeQuery';

import activeCategories from '~/lib/activeCategories';
import HeroPost from '../components/HeroPost.astro';
import MoreStories from '../components/MoreStories.astro';
import PostPreview from '../components/PostPreview.astro';

/**
 * The GraphQL query that will be executed for this route to generate the page
 * content and metadata.
 *
 * Thanks to gql.tada, the result will be fully typed!
 */
const query = graphql(
  /* GraphQL */ `
    query BasicPageQuery {
      blog {
        title
        subtitle
        _firstPublishedAt

        _seoMetaTags {
          ...TagFragment
        }
      }
      allPosts(orderBy: date_DESC) {
        title
        slug
        excerpt
        date
        id
        coverImage {
          responsiveImage(imgixParams: { fm: jpg, fit: crop, w: 2000, h: 1000 }) {
            ...ResponsiveImageFragment
          }
        }
        category {
          name
          slug
          id
        }
        tags {
          name
          slug
          id
        }
      }
    }
  `,
  [
    TagFragment,
    ResponsiveImageFragment,
    // ImageGalleryBlockFragment,
    // VideoBlockFragment,
    // PageLinkFragment,
    // PageInlineFragment,
  ],
);

const draftModeEnabled = isDraftModeEnabled(Astro.cookies);
const { blog, allPosts } = await executeQuery(query, { includeDrafts: draftModeEnabled });

const categories = await activeCategories();
const heroPost = allPosts[0];
const higlights = [allPosts[1], allPosts[2]];
const morePosts = allPosts.slice(3);

if (!blog) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found',
  });
}
---

<Layout additionalSeo={blog._seoMetaTags}>
  <ul>
    {categories.map((category) => <li>{category.name}</li>)}
  </ul>
  <hr />

  {
    heroPost && (
      <HeroPost
        title={heroPost.title}
        coverImage={heroPost.coverImage}
        date={heroPost.date}
        slug={heroPost.slug}
        excerpt={heroPost.excerpt}
        category={heroPost.category}
        tags={heroPost.tags}
      />
    )
  }
  <hr />
  <h3>Highlights</h3>
  <div class="mb-32">
    {
      higlights.map((post) => (
        <PostPreview
          key={post.slug}
          title={post.title}
          coverImage={post.coverImage}
          date={post.date}
          author={post.author}
          slug={post.slug}
          excerpt={post.excerpt}
          category={post.category}
          tags={post.tags}
        />
      ))
    }
  </div>

  <hr />
  <h3>More posts</h3>

  {morePosts.length > 0 && <MoreStories posts={morePosts} categories={categories} />}

  <ul>
    {allPosts.map((post) => <li>{post.title}</li>)}
  </ul>

  <footer>Published at {blog._firstPublishedAt}</footer>

  <h1 class="text-6xl font-bold">{blog.title}</h1>
  <h2>{blog.subtitle}</h2>
  <DraftModeQueryListener query={query} />
</Layout>
